Bootstrap: docker
From: ubuntu:jammy

%labels
    Maintainer="CodeScope ExecEval"
    Description="Singularity/Apptainer image equivalent to Dockerfile"

%environment
    export DEBIAN_FRONTEND=noninteractive
    export TZ=Etc/UTC
    export RUN_UID=1586
    export RUN_GID=1586
    export NUM_WORKERS=16
    export GUNICORN_PORT=5000
    export WORKER_CFG_DB=/root/worker_cfg_db.csv
    export LOG_LEVEL=info
    export PATH=$PATH:/usr/local/go/bin:/usr/local/kotlinc/bin:/usr/local/node-v16.17.1-linux-x64/bin:/opt/rust/bin

%files
    ./execution_engine /root/execution_engine

%post
    set -eux
    export DEBIAN_FRONTEND=noninteractive
    export TZ=Etc/UTC

    # Base setup
    apt-get update
    apt-get install -y \
        gnupg ca-certificates apt-utils \
        build-essential curl unzip

    # Mono repository key and source
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF || true
    echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | tee /etc/apt/sources.list.d/mono-official-stable.list

    # tzdata (avoid interactive prompt) and updates
    apt-get update
    apt-get install -y tzdata

    # Mono and compilers
    apt-get install -y mono-devel \
        gcc-12 g++-12

    # Python and build helpers
    apt-get update
    apt-get install -y software-properties-common python3.11-dev

    # Java 21 (Oracle JDK)
    cd /root
    curl -O https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.deb
    apt-get update
    apt-get install -y -f libasound2 libc6-i386 libc6-x32 libxi6 libxtst6
    dpkg -i jdk-21_linux-x64_bin.deb || apt-get -f install -y
    rm -f jdk-21_linux-x64_bin.deb

    # Kotlin compiler
    curl -OL https://github.com/JetBrains/kotlin/releases/download/v1.7.20/kotlin-compiler-1.7.20.zip
    unzip kotlin-compiler-1.7.20.zip -d /usr/local
    rm -f kotlin-compiler-1.7.20.zip

    # Python2 (for legacy)
    apt-get install -y python2

    # Go
    curl -OL https://go.dev/dl/go1.19.2.linux-amd64.tar.gz
    tar -C /usr/local -xzf go1.19.2.linux-amd64.tar.gz
    rm -f go1.19.2.linux-amd64.tar.gz

    # PyPy 3.9
    curl -OL https://downloads.python.org/pypy/pypy3.9-v7.3.9-linux64.tar.bz2
    tar -C /usr/local -xf pypy3.9-v7.3.9-linux64.tar.bz2
    rm -f pypy3.9-v7.3.9-linux64.tar.bz2

    # PyPy 2.7
    curl -OL https://downloads.python.org/pypy/pypy2.7-v7.3.9-linux64.tar.bz2
    tar -C /usr/local -xf pypy2.7-v7.3.9-linux64.tar.bz2
    rm -f pypy2.7-v7.3.9-linux64.tar.bz2

    # Clang
    apt-get install -y clang-14

    # Node.js v16.17.1
    export NODE_VERSION=v16.17.1
    export NODE_DISTRO=linux-x64
    export NODE_ZIP=node-${NODE_VERSION}-${NODE_DISTRO}.tar.xz
    curl -OL https://nodejs.org/dist/${NODE_VERSION}/${NODE_ZIP}
    tar -C /usr/local -xJvf ${NODE_ZIP}
    rm -f ${NODE_ZIP}

    # Rust
    export RUSTUP_HOME=/opt/rust
    export CARGO_HOME=/opt/rust
    curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path

    # Ruby
    apt-get install -y ruby-full

    # PHP and math libs
    apt-get update
    apt-get install -y --no-install-recommends --fix-missing php8.1
    apt-get install -y libgmp-dev libmpfr-dev

    # Free Pascal (Delphi-compatible Object Pascal)
    apt-get install -y fp-compiler fp-units-rtl fp-units-fcl fp-units-math

    # D language toolchain (LDC + dub)
    apt-get install -y ldc2 dub

    # Perl runtime and cpanminus for module installs
    apt-get install -y perl cpanminus

    # Alternatives
    update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-21-oracle-x64/bin/java 100 || true
    update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk-21-oracle-x64/bin/javac 100 || true
    update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk-21-oracle-x64/bin/jar 100 || true
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 || true
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100 || true
    update-alternatives --install /usr/bin/python python /usr/bin/python3.11 100 || true
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 100 || true
    update-alternatives --install /usr/bin/pypy2 pypy2 /usr/local/pypy2.7-v7.3.9-linux64/bin/pypy2 100 || true
    update-alternatives --install /usr/bin/pypy3 pypy3 /usr/local/pypy3.9-v7.3.9-linux64/bin/pypy3 100 || true

    # Python packages
    apt-get install -y python3-pip gperf
    pip3 install --no-cache-dir flask gunicorn flask-cors gmpy2 Cython jsonlines fire

    # Build and install libseccomp 2.5.4 with Python bindings
    cd /root
    curl -o libseccomp.tar.gz -L https://github.com/seccomp/libseccomp/releases/download/v2.5.4/libseccomp-2.5.4.tar.gz
    tar -xzvf libseccomp.tar.gz
    cd libseccomp-2.5.4
    chmod +x configure
    ./configure --prefix=/usr --enable-python
    make -j"$(nproc)"
    make install
    cd /root
    rm -rf libseccomp*

    # Prepare workspace
    mkdir -p /root/execution_engine

%runscript
    # Default run: start the execution engine
    exec bash -lc 'cd /root/execution_engine && exec bash start_engine.sh'

%help
    To build:  apptainer build ExecEval.sif Singularity.def
    To run:    apptainer run --env GUNICORN_PORT=5000 ExecEval.sif
    The service binds on $GUNICORN_PORT (default 5000).
